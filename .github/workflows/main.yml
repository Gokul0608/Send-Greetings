name: FastAPI CI/CD Pipeline

on:
  push:
    branches:
      - main  # ✅ Runs when a commit is pushed to main (including merges)
  pull_request:
    branches:
      - main
    types:
      - closed  # ✅ Runs only when the PR is closed (merged)

jobs:
  build-test:
    name: Build & Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m venv venv
          ls -lrt
          source venv/bin/activate
          ls -lrt
          pip install -r requirements.txt
          pip list  # ✅ List installed packages

      - name: Debug Python Version
        run: python --version && which python

      - name: Create .env file
        run: |
          echo "SMTP_SERVER=smtp.gmail.com" > .env
          echo "SMTP_PORT=587" >> .env
          echo "SMTP_USERNAME=gokulraja682001@gmail.com" >> .env
          echo "SMTP_PASSWORD=axta oymz hnpk zxoh" >> .env
          echo "SENDER_EMAIL=gokulraja682001@gmail.com" >> .env
          cat .env  # ✅ Debugging: Check if .env is created properly (will not expose secrets)
          ls -lrt

      - name: Start FastAPI Application with Logging
        run: |
          ls -lrt
          source venv/bin/activate
          uvicorn app.main:app --host 0.0.0.0 --port 8000 --log-level debug > fastapi.log 2>&1 &
          sleep 5
          cat fastapi.log  # ✅ Display logs

      - name: Check Running Processes
        run: ps aux | grep uvicorn

      - name: Check If Application Started Successfully
        run: |
          curl -v http://127.0.0.1:8000/ || (echo "FastAPI did not start!" && exit 1)

      - name: Stop Application
        run: pkill -f "uvicorn"

  deploy:
    name: Deploy FastAPI App
    needs: build-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Set up SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H 3.110.56.178 >> ~/.ssh/known_hosts

      - name: Deploy to FastAPI Server
        run: |
          ssh -i ~/.ssh/id_rsa ubuntu@3.110.56.178 << 'EOF'
            cd /opt/Send-Greetings
            git pull
            pip install -r requirements.txt
            sudo systemctl restart fastapi.service
            sudo systemctl status fastapi.service
          EOF

  notify:
    name: Send Notification
    needs: deploy
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Send Email on Success
        if: success()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ secrets.SMTP_SERVER }}
          server_port: ${{ secrets.SMTP_PORT }}
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "✅ FastAPI CI/CD Success"
          to: "gokulraja060801@yopmail.com"
          from: "GitHub Actions <${{ secrets.EMAIL_USERNAME }}>"
          body: "The deployment of FastAPI backend was successful. \n\nApplication URL: http://3.110.56.178:8000"

      - name: Send Email on Failure
        if: failure()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ secrets.SMTP_SERVER }}
          server_port: ${{ secrets.SMTP_PORT }}
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "❌ FastAPI CI/CD Failed"
          to: "gokulraja060801@yopmail.com"
          from: "GitHub Actions <${{ secrets.EMAIL_USERNAME }}>"
          body: "The deployment of FastAPI backend has failed. Please check the logs."
